<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player2_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// MOVEMENT

horizontal_speed = 0; // velocidad horizontal
vertical_speed = 0; // velocidad vertical
grav = 3; // fuerza de gravedad
movespeed = 15; // velocidad de movimiento
jumpspeed = 35; // velocidad de salto

// SHOOTING
lenX = 40;
lenY = 62;
current_frame = 4;
cadency = 3;

// SHOP
count = 0;
timeShieldSeconds = 30;
timeShield = (60*timeShieldSeconds)/2;

isBuyingGhost = false;
isBuyingShield = false;

hasShieldActivated = false;
hasGhostActivated = false;
hasUmbrellaActivated = false;
hasFireballActivated = false;
numFireballShots = 20;

hasShield = false;
hasGhost = false;
hasUmbrella = false;
hasFireball = false;

// ENEMIES

new_flies = 2;
live = 100;
injured=false;

xHud = 350;
yHud = 70;

// ECONOMY

global.player2_coins = 0;
global.player2_totalcoins = 0;
global.player2_victories = 0;
global.numFlies = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CHARACTER CONTROLLER



/// GRAVEDAD 

// Añadimos la gravedad
if (vertical_speed &lt; 20 &amp;&amp; !place_meeting(x,y+1,ground_obj)){
    vertical_speed += grav;
}

// INPUT 

    // move
    key_right = keyboard_check(vk_right);
    key_left = -keyboard_check(vk_left);
    move = key_left + key_right;
    
    horizontal_speed = move * movespeed;
    
    //Shoot
    key_shoot = keyboard_check(ord('L'));
    
    //Aim up
    key_aim_up = keyboard_check(vk_up);
    
    // jump
    key_jump = keyboard_check(ord("K"));
    
    //Power Up
    key_powerup = keyboard_check(ord("J"));
     
// JUMP

if(place_meeting(x,y+1,ground_obj) &amp;&amp; key_jump)
{
    audio_play_sound(snd_jump, 1, false);
    vertical_speed = -jumpspeed;
}

// USE ITEMS


 if(key_powerup &amp;&amp; hasGhost &amp;&amp; global.state == 'inGame'){
    audio_play_sound(snd_power_up, 1, false);
    hasGhost = false;
    // activate ghost
    hasGhostActivated = true;
    instance_create(x,y,ghost_obj);
    ghost_obj.player = 2;
    show_debug_message("activate ghost");
 }
 
 if(key_powerup &amp;&amp; hasShield &amp;&amp; global.state == 'inGame')
 {
    audio_play_sound(snd_power_up, 1, false);
    hasShield = false;
    // activate shield
    hasShieldActivated = true;
    show_debug_message("activate shield");
 }
 
  if(hasUmbrella)
 {
    hasUmbrella = false;
    hasUmbrellaActivated = true;
    instance_create(0,0,umbrellaActive_obj);
    show_debug_message("activate Umbrella");
    
 }
 
// DISPARO
 
 if(key_shoot &amp;&amp; current_frame &gt;= cadency){
    current_frame = 0;
    if(hasFireballActivated){
        //Si tiene la bola de fuego activada
        numFireballShots = numFireballShots - 1;
        show_debug_message(numFireballShots);
        if(numFireballShots == 0){
            numFireballShots = 20;
            hasFireballActivated = false;
        }
        if(key_aim_up){
            var bullet_id;
    
            bullet_id = instance_create(x,y + lenY - 50,fireballShot_obj);
            bullet_id.direction = 90;
            bullet_id.player = 2;
    
            bullet_id.speed = 25;
            keyboard_clear(ord("C"));
            //keyboard_clear(ord("W"));
        }else{
     
            var bullet_id;
            if(image_xscale == 1){
                bullet_id = instance_create(x + lenX + 50,y + lenY,fireballShot_obj);
                bullet_id.direction = 0;
                bullet_id.player = 2;
            }else{
                bullet_id = instance_create(x - lenX - 5 - 50,y + lenY,fireballShot_obj);
                bullet_id.direction = 180;
                bullet_id.player = 2;
            }
            bullet_id.speed = 25;
            keyboard_clear(ord("M"));
        }
    }else{
    
        if(key_aim_up){
            var bullet_id;
    
            bullet_id = instance_create(x,y + lenY,yellowShot_obj);
            bullet_id.direction = 90;
    
            bullet_id.speed = 25;
            keyboard_clear(ord("C"));
            //keyboard_clear(ord("W"));
        }else{
            var bullet_id;
            if(image_xscale == 1){
                bullet_id = instance_create(x + lenX,y + lenY,yellowShot_obj);
                bullet_id.direction = 0;
            }else{
                bullet_id = instance_create(x - lenX - 5,y + lenY,yellowShot_obj);
                bullet_id.direction = 180;
            }
            bullet_id.speed = 25;
            keyboard_clear(ord("C"));
        }
        
    }
    
    
 }else if(current_frame &lt; cadency){
    current_frame++;
 }


// COLISIONES

// Colision vertical contra ground_obj
// si a la siguiente iteración toca al suelo
if(place_meeting(x,y+vertical_speed,ground_obj))
{
    
    // recorrer uno a uno los pixeles de bajada para no pasarse
    while(!place_meeting(x,y+sign(vertical_speed),ground_obj))
    {
        y += sign(vertical_speed);
    }
    vertical_speed = 0;
}

// Colision horizontal
if(place_meeting(x+horizontal_speed,y,ground_obj))
{
    // recorrer uno a uno los pixeles de bajada para no pasarse
    while(!place_meeting(x+sign(horizontal_speed),y,ground_obj))
    {
        x += sign(horizontal_speed);
    }
    horizontal_speed = 0;

}



// animate 
if(move !=0) image_xscale = move; // invert the animations depending of the direction
if(place_meeting(x,y+1,ground_obj))
{
    if(hasShieldActivated){
    
        if(move !=0){
            if(key_aim_up)
            sprite_index = spr_player2_runFire1; 
           else
            sprite_index = spr_player2_run1; 
        }else{
            if(key_aim_up)
                sprite_index  = spr_player2_fireUp1;
            else
                sprite_index = spr_player2_idle1;
        }
    }else{
        if(move !=0){
            if(key_aim_up)
            sprite_index = spr_player2_runFire; 
           else
            sprite_index = spr_player2_run; 
        }else{
            if(key_aim_up)
                sprite_index  = spr_player2_fireUp;
            else
                sprite_index = spr_player2_idle;
        }
    }
}else
{
    if(hasShieldActivated) 
        if(vertical_speed &lt; 0) sprite_index = spr_player2_jump1; else sprite_index = spr_player2_fall1; 
    else
        if(vertical_speed &lt; 0) sprite_index = spr_player2_jump; else sprite_index = spr_player2_fall; 
}




// sumamos la gravedad al personaje
y += vertical_speed;
x += horizontal_speed;


if(hasShieldActivated)
{
    count++;
    
    if(count == timeShield)
    {
        count =0;
        hasShieldActivated = false;
    }
}
// GAME OVER 
if(live &lt;= 0){
    global.roundWinner = 1;
  // var numb = asset_get_index("room"+string(3));
  gameSystem_obj.done = true;
    live= 100;
    player1_obj.live = 100;
}

if(injured)
{
    sprite_index = spr_player2_Injured;
   // audio_play_sound(snd_hurt, 1, false);
    injured = false;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.inGame)
{

    // GUI
    
    draw_sprite(spr_player2_hud,0,xHud-30,yHud-20);
    
    // Background
    draw_sprite(spr_healthbar_bg,1,xHud+31,yHud+20);
    // Inner
    draw_sprite_ext(spr_healthbar_inner,1,xHud+31,yHud+20,live/100,1,0,c_white,1);
    // Border
    draw_sprite(spr_healthbar_border,1,xHud,yHud);
    
    // Coins
    draw_sprite(spr_coin,1,xHud-30,yHud+30);
    
    draw_set_font(fnt_HUD);
    draw_set_colour(c_white);
    // coin number
    draw_text(xHud+80,yHud+50,global.player2_coins);
    
    // POWERS !!!!
    
    // Ghost
    if(player2_obj.hasGhost)draw_sprite(spr_ghost_hud,0,xHud+50,yHud-30);
    
    // Shield
    if(player2_obj.hasShield)draw_sprite(spr_shield_hud,0,xHud+80,yHud-35);
    
    // Fireball
    if(player2_obj.hasFireballActivated)draw_sprite(spr_fireball_hud,0,xHud+110,yHud-35);
    
    // Umbrella
    if(player2_obj.hasUmbrellaActivated)draw_sprite(spr_umbrella_hud,0,xHud+170,yHud-35);
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
