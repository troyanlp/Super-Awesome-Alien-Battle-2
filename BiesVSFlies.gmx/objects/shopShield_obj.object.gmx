<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>shopShield</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.state = 'shop';

cost = 2500;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// They are inside
if(place_meeting(x,y,player1_obj) || place_meeting(x,y,player2_obj))
{


    if(place_meeting(x,y,player1_obj) &amp;&amp; !player1_obj.isBuyingShield)
    {
        
        if(!player1_obj.hasShield &amp;&amp; !player1_obj.hasGhost){
            instance_create(player1_obj.x,player1_obj.y - 60, buyPlayer1_obj);
            player1_obj.isBuyingShield = true; 
        }  
    }
    
    if(place_meeting(x,y,player2_obj) &amp;&amp; !player2_obj.isBuyingShield)
    {
      if(!player2_obj.hasShield &amp;&amp; !player2_obj.hasGhost){
         instance_create(player2_obj.x,player2_obj.y - 60,buyPlayer2_obj);
         player2_obj.isBuyingShield = true;
      }
        
    }
    //show_debug_message("inside");
    
    /// BUY items

        // player 1 
        key_E = keyboard_check(ord('E'));
        
        if (key_E &amp;&amp; !player1_obj.hasGhost &amp;&amp; global.player1_coins &gt;= cost)
        {
            player1_obj.hasShield = true;
            global.player1_coins -= cost;
             show_debug_message("new Shield player 1");
        }
        
        // player 2
        key_J = keyboard_check(ord('J'));
        
        if (key_J &amp;&amp; !player2_obj.hasGhost  &amp;&amp; global.player2_coins &gt;= cost) {
            player2_obj.hasShield = true;
            global.player2_coins -= cost;
             show_debug_message("new Shield player 2");
        }



}

// EXIT player 1
if(!place_meeting(x,y,player1_obj) &amp;&amp; player1_obj.isBuyingShield )
{
    numb = asset_get_index("buyPlayer1_obj");
    
    if(object_exists(numb)){
        with(buyPlayer1_obj){
            instance_destroy( );
        }
         player1_obj.isBuyingShield = false;
    }
}

// EXIT player 2
if(!place_meeting(x,y,player2_obj) &amp;&amp; player2_obj.isBuyingShield)
{
    numb = asset_get_index("buyPlayer2_obj");
    
    if(object_exists(numb)){
        with(buyPlayer2_obj){
            instance_destroy( );
        }
         player2_obj.isBuyingShield = false;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
